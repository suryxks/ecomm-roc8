// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}
generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
    provider = "postgresql" 
    url      = env("DATABASE_URL")
}

model User{
    id String @id @default(cuid())
    name String 
    email String @unique
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    password Password?
    sessions Session[]
    categories Category[]
    isVerified Boolean @default(false)
}

model Password{
    hash String 
    userId String @unique
    user User @relation(fields: [userId],references: [id],onDelete: Cascade,onUpdate: Cascade)
}

model Category{
    id String @id @default(uuid())
    name String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    users User[]
}

model Session{
    id String @id @default(cuid())
    expiresAt DateTime?
    userId String
    user User @relation(fields: [userId],references: [id],onDelete: Cascade,onUpdate: Cascade)

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
} 

model Verification {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  /// The type of verification, e.g. "email" or "phone"
  type String

  /// The thing we're trying to verify, e.g. a user's email or phone number
  target String

  /// The secret key used to generate the otp
  secret String

  /// The algorithm used to generate the otp
  algorithm String

  /// The number of digits in the otp
  digits Int

  /// The number of seconds the otp is valid for
  period Int

  /// The valid characters for the otp
  charSet String

  /// When it's safe to delete this verification
  expiresAt DateTime?

  @@unique([target, type])
}
